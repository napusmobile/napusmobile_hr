<div class="row g-3 mt-2">
  <div class="col-md-6">
    <div class="card border-0 shadow-sm mb-2">
      <div class="card-header bg-white">
        <div class="row g-3">
          <div class="col-12 col-md-4 mb-2 mb-md-0">üïí Time/‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</div>
          <div class="col-12 col-md-8 d-flex flex-wrap justify-content-md-end">
            <button type="button" class="btn btn-sm upload-button" data-bs-target="#setTimeModal" data-bs-toggle="modal"><i class="fa-regular fa-clock"></i> ‡πÄ‡∏û‡∏¥‡πà‡∏°</button>
          </div>
        </div>
      </div>
      <div class="card-body rounded-4">
        <div class="table-responsive">
          <table class="table table-sm">
            <thead>
              <tr>
                <th scope="col" class="text-center">ID</th>
                <th scope="col" class="text-center">checkin</th>
                <th scope="col" class="text-center">checkout</th>
                <th scope="col" class="text-center">status</th>
                <th scope="col" class="text-center">Action</th>
              </tr>
            </thead>
            <tbody id="tableSetTime">
              <tr>
                <td colspan='5' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>
              </tr>
            </tbody>       
          </table>
        </div>
      </div>
    </div>

    <div class="card border-0 shadow-sm mb-2">
      <div class="card-header bg-white">
        <div class="row g-3">
          <div class="col-12 col-md-4 mb-2 mb-md-0">üïí OT/‡πÇ‡∏≠‡∏ó‡∏µ</div>
          <div class="col-12 col-md-8 d-flex flex-wrap justify-content-md-end">
            <button type="button" class="btn btn-sm upload-button" data-bs-target="#setOTModal" data-bs-toggle="modal"><i class="fa-regular fa-clock"></i> ‡πÄ‡∏û‡∏¥‡πà‡∏°</button>
          </div>
        </div>
      </div>
      <div class="card-body rounded-4 ">
        <div class="table-responsive">
          <table class="table table-sm">
            <thead>
              <tr>
                <th scope="col" class="text-center">ID</th>
                <th scope="col" class="text-center">‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô</th>
                <th scope="col" class="text-center">status</th>
                <th scope="col" class="text-center">Action</th>
              </tr>
            </thead>
            <tbody id="tableSetOT">
              <tr>
                <td colspan='4' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>
              </tr>
            </tbody>       
          </table>
        </div>
      </div>
    </div>

    <div class="card border-0 shadow-sm mb-2">
      <div class="card-header bg-white">
        <div class="row g-3">
          <div class="col-12 col-md-4 mb-2 mb-md-0">üóìÔ∏è DayOff/‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏¥‡πÄ‡∏®‡∏©</div>
          <div class="col-12 col-md-8 d-flex flex-wrap justify-content-md-end">
            <button type="button" class="btn btn-sm upload-button" data-bs-target="#setDayOffModal" data-bs-toggle="modal"><i class="fa-regular fa-calendar-days"></i> ‡πÄ‡∏û‡∏¥‡πà‡∏°</button>
          </div>
        </div>
      </div>
      <div class="card-body rounded-4">
        <div class="table-responsive">
          <table class="table table-sm">
            <thead>
              <tr>
                <th scope="col" class="text-center">ID</th>
                <th scope="col" class="text-center">‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î</th>
                <th scope="col" class="text-center">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</th>
                <th scope="col" class="text-center">Action</th>
              </tr>
            </thead>
            <tbody id="tableSetDayOff">
              <tr>
                <td colspan='4' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>
              </tr>
            </tbody>       
          </table>
        </div>
      </div>
    </div>

    <div class="card border-0 shadow-sm mb-2">
      <div class="card-header bg-white">
        <div class="row g-3">
          <div class="col-12 col-md-4 mb-2 mb-md-0">üí≤ Salary/‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</div>
          <div class="col-12 col-md-8 d-flex flex-wrap justify-content-md-end">
            <button type="button" class="btn btn-sm upload-button" data-bs-target="#setSalaryModal" data-bs-toggle="modal"><i class="fa-solid fa-coins"></i> ‡πÄ‡∏û‡∏¥‡πà‡∏°</button>
          </div>
        </div>
      </div>
      <div class="card-body rounded-4 ">
        <div class="table-responsive">
          <table class="table table-sm">
            <thead>
              <tr>
                <th scope="col" class="text-center">ID</th>
                <th scope="col" class="text-center">‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô</th>
                <th scope="col" class="text-center">‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î</th>
                <th scope="col" class="text-center">‡∏á‡∏ß‡∏î</th>
                <th scope="col" class="text-center">Action</th>
              </tr>
            </thead>
            <tbody id="tableSetSalary">
              <tr>
                <td colspan='5' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>
              </tr>
            </tbody>       
          </table>
        </div>
      </div>
    </div>

  </div>

  <div class="col-md-6">
    <div class="card border-0 shadow-sm mb-2">
      <div class="card-header bg-white">
        <div class="row g-3">
          <div class="col-12 col-md-4 mb-2 mb-md-0">üåè Locations/‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà</div>
          <div class="col-12 col-md-8 d-flex flex-wrap justify-content-md-end">
            <button type="button" class="btn btn-sm upload-button me-2 mb-2 mb-md-0" data-bs-target="#setLocationsModal" data-bs-toggle="modal"><i class="fa-solid fa-location-dot"></i> ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà</button>
          </div>
        </div>
      </div>
      <div class="card-body rounded-4 ">
        <div class="table-responsive">
            <table class="table table-sm">
            <thead>
              <tr>
                <th scope="col" class="text-center">‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà</th>
                <th scope="col" class="text-center">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</th>
                <th scope="col" class="text-center">‡πÄ‡∏°‡∏∑‡∏≠‡∏á</th>
                <th scope="col" class="text-center">‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå</th>
                <th scope="col" class="text-center">‡∏•‡∏∞‡∏ï‡∏¥‡∏à‡∏π‡∏î</th>
                <th scope="col" class="text-center">‡∏•‡∏≠‡∏á‡∏à‡∏¥‡∏à‡∏π‡∏î</th>
                <th scope="col" class="text-center">Action</th>
              </tr>
            </thead>
            <tbody id="tableSetLocations">
              <tr>
                <td colspan='7' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>
              </tr>
            </tbody> 
          </table>
        </div>
      </div>
    </div>
    <div class="card border-0 shadow-sm mb-2">
      <div class="card-header bg-white">
        <div class="row g-3">
          <div class="col-12 col-md-4 mb-2 mb-md-0">üò∑ Leave/‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏•‡∏≤</div>
          <div class="col-12 col-md-8 d-flex flex-wrap justify-content-md-end">
            <button type="button" class="btn btn-sm upload-button" data-bs-target="#setLeaveModal" data-bs-toggle="modal"><i class="fa-solid fa-lungs-virus"></i> ‡πÄ‡∏û‡∏¥‡πà‡∏°</button>
          </div>
        </div>
      </div>
      <div class="card-body rounded-4 ">
        <div class="table-responsive">
          <table class="table table-sm">
            <thead>
              <tr>
                <th scope="col" class="text-center">ID</th>
                <th scope="col" class="text-center">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th>
                <th scope="col" class="text-center">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                <th scope="col" class="text-center">status</th>
                <th scope="col" class="text-center">Action</th>
              </tr>
            </thead>
            <tbody id="tableSetLeave">
              <tr>
                <td colspan='5' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>
              </tr>
            </tbody>       
          </table>
        </div>
      </div>
    </div>

    <div class="card border-0 shadow-sm mb-2">
      <div class="card-header bg-white">
        <div class="row g-3">
          <div class="col-12 col-md-4 mb-2 mb-md-0">üë®‚Äçüíª SSO/‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏™‡∏±‡∏á‡∏Ñ‡∏°</div>
          <div class="col-12 col-md-8 d-flex flex-wrap justify-content-md-end">
            <button type="button" class="btn btn-sm upload-button" data-bs-target="#setSSOModal" data-bs-toggle="modal"><i class="fa-regular fa-clock"></i> ‡πÄ‡∏û‡∏¥‡πà‡∏°</button>
          </div>
        </div>
      </div>
      <div class="card-body rounded-4 ">
        <div class="table-responsive">
          <table class="table table-sm">
            <thead>
              <tr>
                <th scope="col" class="text-center">ID</th>
                <th scope="col" class="text-center">‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô</th>
                <th scope="col" class="text-center">status</th>
                <th scope="col" class="text-center">Action</th>
              </tr>
            </thead>
            <tbody id="tableSetSSO">
              <tr>
                <td colspan='4' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>
              </tr>
            </tbody>       
          </table>
        </div>
      </div>
    </div>

    <div class="card border-0 shadow-sm mb-2">
      <div class="card-header bg-white">
        <div class="row g-3">
          <div class="col-12 col-md-4 mb-2 mb-md-0">üìÖ WeekEnd/‡∏ß‡∏±‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</div>
          <div class="col-12 col-md-8 d-flex flex-wrap justify-content-md-end">
            <button type="button" class="btn btn-sm upload-button" data-bs-target="#setWeekEndModal" data-bs-toggle="modal"><i class="fa-regular fa-calendar-days"></i> ‡πÄ‡∏û‡∏¥‡πà‡∏°</button>
          </div>
        </div>
      </div>
      <div class="card-body rounded-4 ">
        <div class="table-responsive">
          <table class="table table-sm">
            <thead>
              <tr>
                <th scope="col" class="text-center">ID</th>
                <th scope="col" class="text-center">‡∏ß‡∏±‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</th>
                <th scope="col" class="text-center">status</th>
                <th scope="col" class="text-center">Action</th>
              </tr>
            </thead>
            <tbody id="tableSetWeekEnd">
              <tr>
                <td colspan='4' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>
              </tr>
            </tbody>       
          </table>
        </div>
      </div>
    </div>

    <div class="card border-0 shadow-sm mb-2">
      <div class="card-header bg-white">
        <div class="row g-3">
          <div class="col-12 col-md-4 mb-2 mb-md-0">üè¶ Bank/‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ô‡∏≥‡∏™‡πà‡∏á</div>
          <div class="col-12 col-md-8 d-flex flex-wrap justify-content-md-end">
            <button type="button" class="btn btn-sm upload-button" data-bs-target="#setBankModal" data-bs-toggle="modal"><i class="fa-solid fa-building-columns"></i> ‡πÄ‡∏û‡∏¥‡πà‡∏°</button>
          </div>
        </div>
      </div>
      <div class="card-body rounded-4 ">
        <div class="table-responsive">
          <table class="table table-sm">
            <thead>
              <tr>
                <th scope="col" class="text-center">ID</th>
                <th scope="col" class="text-center">Logo</th>
                <th scope="col" class="text-center">BankName(TH)</th>
                <th scope="col" class="text-center">BankName(EN)</th>
                <th scope="col" class="text-center">Action</th>
              </tr>
            </thead>
            <tbody id="tableSetBacnkCode">
              <tr>
                <td colspan='5' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>
              </tr>
            </tbody>       
          </table>
        </div>
      </div>
    </div>

  </div>
</div>

<script>
const renderAllDataSetLocations = (res) => {
  const table = document.getElementById('tableSetLocations');
  table.innerHTML = '';

  if (res.length === 0) {
    const row = table.insertRow();
    row.innerHTML = `<td colspan='7' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>`;
    return;
  }

  res.forEach((rowIndex) => {
    var row = table.insertRow();
    row.innerHTML = `
      <td><span style="font-size: 14px;">${rowIndex[0]}</span></td>
      <td><span style="font-size: 14px;">${rowIndex[1]}</span></td>
      <td><span style="font-size: 14px;">${rowIndex[2]}</span></td>
      <td><span style="font-size: 14px;">${rowIndex[3]}</span></td>
      <td><span style="font-size: 14px;color: var(--box2);">${rowIndex[4]}</span></td>
      <td><span style="font-size: 14px;color: var(--box2);">${rowIndex[5]}</span></td>
      <td class="text-center">
        <div style="display: flex; justify-content: center;">
          <button type='button' class='btn btn-sm me-2 del-button' onclick='delSetLocations("${rowIndex[0]}");'><i class='fa-solid fa-trash-can'></i></button>
        </div>
      </td>
    `;
  });
}

const submitFormSetLocations = () => {
  event.preventDefault();
  $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });

  const obj = {
    key: document.getElementById('dataSetLocationsKey').value,
    location1: document.getElementById('dataSetLocations1').value,
    location2: document.getElementById('dataSetLocations2').value,
    location3: document.getElementById('dataSetLocations3').value,
    location4: document.getElementById('dataSetLocations4').value,
    location5: document.getElementById('dataSetLocations5').value,
    location6: document.getElementById('dataSetLocations6').value
  }

  if (!obj.location1 || !obj.location2 || !obj.location3 || !obj.location4 || !obj.location5 || !obj.location6) {
    createToast("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô", 3);
    $.LoadingOverlay("hide");
    return;
  }

  if (!obj.key) {
    google.script.run.withSuccessHandler(async (res) => {
      $.LoadingOverlay("hide");
      const newSetLocationsData = await fetchDataFromAPI(sheetSetting, 'Locations');
      await checkAndUpdateDataSetLocations(newSetLocationsData);
      loadShiftTimes();
      clearFormSetLocations();
      createToast("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
    }).addDataSetLocations(obj);
  } else {
    google.script.run.withSuccessHandler(async (res) => {
      $.LoadingOverlay("hide");
      const newSetLocationsData = await fetchDataFromAPI(sheetSetting, 'Locations');
      await checkAndUpdateDataSetLocations(newSetLocationsData);
      loadShiftTimes();
      clearFormSetLocations();
      createToast("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
    }).upDataSetLocations(obj);
  }
}

const editSetLocations = (codeID) => {
  const rowIndex = allLocations.find(row => row[0] === codeID);
  if (rowIndex) {
    $('#setLocationsModal').modal('show');
    $('#dataSetLocationsKey').val(rowIndex[0]);
    $('#dataSetLocations1').val(rowIndex[1]);
    $('#dataSetLocations2').val(rowIndex[2]);
    $('#dataSetLocations3').val(rowIndex[3]);
    $('#dataSetLocations4').val(rowIndex[4]);
    $('#dataSetLocations5').val(rowIndex[5]);
  }
}

const delSetLocations = (codeID) => {
  let rowIndex = allLocations.find(row => row[0] === codeID);
  if (rowIndex) {
    $('#confirmBtnDel').off('click').on('click', function() {
      $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });
      $('#DelDataModal').modal('hide');
      google.script.run.withSuccessHandler(async (res) => {
        rowIndex = allLocations.filter(row => row[0] !== codeID);
        $.LoadingOverlay("hide");
        const newSetLocationsData = await fetchDataFromAPI(sheetSetting, 'Locations');
        await checkAndUpdateDataSetLocations(newSetLocationsData);
        createToast("‚õî ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 0);
      }).delDataSetLocations(codeID);
    });
    $('#xDelconfirmData').off('click').on('click', function() {
      $('#DelDataModal').modal('hide');
    });
    $('#DelDataModal').modal('show');
  }
}

const clearFormSetLocations = () => {
  $('#setLocationsModal').modal('hide');
  document.getElementById('dataSetLocationsKey').value = "";
  document.getElementById('dataSetLocations1').value = "";
  document.getElementById('dataSetLocations2').value = "";
  document.getElementById('dataSetLocations3').value = "";
  document.getElementById('dataSetLocations4').value = "";
  document.getElementById('dataSetLocations5').value = "";
  createToast("üîÑ ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", 0);
}

const renderAllDataSetTime = (res) => {
  const table = document.getElementById('tableSetTime');
  table.innerHTML = '';

  if (res.length === 0) {
    const row = table.insertRow();
    row.innerHTML = `<td colspan='5' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>`;
    return;
  }

  res.forEach((rowIndex) => {
    let isActive = rowIndex[3] === "TRUE";
    var row = table.insertRow();
    row.innerHTML = `
      <td class="text-center"><span style="font-size: 14px;">${rowIndex[0]}</span></td>
      <td class="text-center"><span style="font-size: 14px;color: var(--box2);"><i class="fa-solid fa-circle-arrow-up"></i> ${rowIndex[1]}</span></td>
      <td class="text-center"><span style="font-size: 14px;color: var(--box4);"><i class="fa-solid fa-circle-arrow-down"></i> ${rowIndex[2]}</span></td>
      <td class="text-center">
        <div class="custom-switch">
          <input type="checkbox" ${isActive ? 'checked' : ''} id="switch-${rowIndex[0]}" class="custom-switch-input" onchange="toggleSetStatus('${rowIndex[0]}', this.checked, 'statusTime')">
          <label for="switch-${rowIndex[0]}" class="custom-switch-label"></label>
        </div>
      </td>
      <td class="text-center">
        <div style="display: flex; justify-content: center;">
          <button type='button' class='btn btn-sm me-2 edit-button' onclick='editSetTime("${rowIndex[0]}");'><i class='fa-solid fa-pen-to-square'></i></button>
          <button type='button' class='btn btn-sm me-2 del-button' onclick='delSetTime("${rowIndex[0]}");'><i class='fa-solid fa-trash-can'></i></button>
        </div>
      </td>
    `;
  });
}

const submitFormSetTime = () => {
  event.preventDefault();
  $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });

  const obj = {
    key: document.getElementById('dataSetTimeKey').value,
    times1: document.getElementById('dataSetTime1').value,
    times2: document.getElementById('dataSetTime2').value
  }

  if (!obj.times1 || !obj.times2) {
    createToast("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô", 3);
    $.LoadingOverlay("hide");
    return;
  }

  if (!obj.key) {
    google.script.run.withSuccessHandler(async (res) => {
      $.LoadingOverlay("hide");
      const newSetTimeData = await fetchDataFromAPI(sheetSetting, 'SetTime');
      await checkAndUpdateDataSetTime(newSetTimeData);
      clearFormSetTime();
      createToast("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
    }).addDataSetTime(obj);
  } else {
    google.script.run.withSuccessHandler(async (res) => {
      $.LoadingOverlay("hide");
      const newSetTimeData = await fetchDataFromAPI(sheetSetting, 'SetTime');
      await checkAndUpdateDataSetTime(newSetTimeData);
      clearFormSetTime();
      createToast("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
    }).upDataSetTime(obj);
  }
}

const editSetTime = (codeID) => {
  const rowIndex = allsetTime.find(row => row[0] === codeID);
  if (rowIndex) {
    $('#setTimeModal').modal('show');
    $('#dataSetTimeKey').val(rowIndex[0]);
    $('#dataSetTime1').val(rowIndex[1]);
    $('#dataSetTime2').val(rowIndex[2]);
  }
}

const delSetTime = (codeID) => {
  let rowIndex = allsetTime.find(row => row[0] === codeID);
  if (rowIndex) {
    $('#confirmBtnDel').off('click').on('click', function() {
      $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });
      $('#DelDataModal').modal('hide');
      google.script.run.withSuccessHandler(async (res) => {
        rowIndex = allsetTime.filter(row => row[0] !== codeID);
        $.LoadingOverlay("hide");
        const newSetTimeData = await fetchDataFromAPI(sheetSetting, 'SetTime');
        await checkAndUpdateDataSetTime(newSetTimeData);
        createToast("‚õî ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 0);
      }).delDataSetTime(codeID);
    });
    $('#xDelconfirmData').off('click').on('click', function() {
      $('#DelDataModal').modal('hide');
    });
    $('#DelDataModal').modal('show');
  }
}

const clearFormSetTime = () => {
  $('#setTimeModal').modal('hide');
  document.getElementById('dataSetTimeKey').value = "";
  document.getElementById('dataSetTime1').value = "";
  document.getElementById('dataSetTime2').value = "";
  createToast("üîÑ ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", 0);
}

const renderAllDataSetLeave = (res) => {
  const table = document.getElementById('tableSetLeave');
  table.innerHTML = '';

  if (res.length === 0) {
    const row = table.insertRow();
    row.innerHTML = `<td colspan='5' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>`;
    return;
  }

  res.forEach((rowIndex) => {
    let isActive = rowIndex[3] === "TRUE";
    var row = table.insertRow();
    row.innerHTML = `
      <td class="text-center"><span style="font-size: 14px;">${rowIndex[0]}</span></td>
      <td><span style="font-size: 14px;"> ${rowIndex[1]}</span></td>
      <td class="text-center"><span style="font-size: 14px;">${rowIndex[2]}</span></td>
      <td class="text-center">
        <div class="custom-switch">
          <input type="checkbox" ${isActive ? 'checked' : ''} id="switch-${rowIndex[0]}" class="custom-switch-input" onchange="toggleSetStatus('${rowIndex[0]}', this.checked, 'statusLeave')">
          <label for="switch-${rowIndex[0]}" class="custom-switch-label"></label>
        </div>
      </td>
      <td class="text-center">
        <div style="display: flex; justify-content: center;">
          <button type='button' class='btn btn-sm me-2 edit-button' onclick='editSetLeave("${rowIndex[0]}");'><i class='fa-solid fa-pen-to-square'></i></button>
          <button type='button' class='btn btn-sm me-2 del-button' onclick='delSetLeave("${rowIndex[0]}");'><i class='fa-solid fa-trash-can'></i></button>
        </div>
      </td>
    `;
  });
}

const submitFormSetLeave = () => {
  event.preventDefault();
  $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });

  const obj = {
    key: document.getElementById('dataSetLeaveKey').value,
    leave1: document.getElementById('dataSetLeave1').value,
    leave2: document.getElementById('dataSetLeave2').value
  }

  if (!obj.leave1 || !obj.leave2) {
    createToast("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô", 3);
    $.LoadingOverlay("hide");
    return;
  }

  if (!obj.key) {
    google.script.run.withSuccessHandler(async (res) => {
      $.LoadingOverlay("hide");
      const newSetLeaveData = await fetchDataFromAPI(sheetSetting, 'SetLeave');
      await checkAndUpdateDataSetLeave(newSetLeaveData);
      clearFormSetLeave();
      createToast("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
    }).addDataSetLeave(obj);
  } else {
    google.script.run.withSuccessHandler(async (res) => {
      $.LoadingOverlay("hide");
      const newSetLeaveData = await fetchDataFromAPI(sheetSetting, 'SetLeave');
      await checkAndUpdateDataSetLeave(newSetLeaveData);
      clearFormSetLeave();
      createToast("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
    }).upDataSetLeave(obj);
  }
}

const editSetLeave = (codeID) => {
  const rowIndex = allsetLeave.find(row => row[0] === codeID);
  if (rowIndex) {
    $('#setLeaveModal').modal('show');
    $('#dataSetLeaveKey').val(rowIndex[0]);
    $('#dataSetLeave1').val(rowIndex[1]);
    $('#dataSetLeave2').val(rowIndex[2]);
  }
}

const delSetLeave = (codeID) => {
  let rowIndex = allsetLeave.find(row => row[0] === codeID);
  if (rowIndex) {
    $('#confirmBtnDel').off('click').on('click', function() {
      $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });
      $('#DelDataModal').modal('hide');
      google.script.run.withSuccessHandler(async (res) => {
        rowIndex = allsetLeave.filter(row => row[0] !== codeID);
        $.LoadingOverlay("hide");
        const newSetLeaveData = await fetchDataFromAPI(sheetSetting, 'SetLeave');
        await checkAndUpdateDataSetLeave(newSetLeaveData);
        createToast("‚õî ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 0);
      }).delDataSetLeave(codeID);
    });
    $('#xDelconfirmData').off('click').on('click', function() {
      $('#DelDataModal').modal('hide');
    });
    $('#DelDataModal').modal('show');
  }
}

const clearFormSetLeave = () => {
  $('#setLeaveModal').modal('hide');
  document.getElementById('dataSetLeaveKey').value = "";
  document.getElementById('dataSetLeave1').value = "";
  document.getElementById('dataSetLeave2').value = "";
  createToast("üîÑ ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", 0);
}

const renderAllDataSetOT = (res) => {
  const table = document.getElementById('tableSetOT');
  table.innerHTML = '';

  if (res.length === 0) {
    const row = table.insertRow();
    row.innerHTML = `<td colspan='4' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>`;
    return;
  }

  res.forEach((rowIndex) => {
    let isActive = rowIndex[2] === "TRUE";
    var row = table.insertRow();
    row.innerHTML = `
      <td class="text-center"><span style="font-size: 14px;">${rowIndex[0]}</span></td>
      <td class="text-center"><span style="font-size: 14px;">${rowIndex[1]}</span></td>
      <td class="text-center">
        <div class="custom-switch">
          <input type="checkbox" ${isActive ? 'checked' : ''} id="switch-${rowIndex[0]}" class="custom-switch-input" onchange="toggleSetStatus('${rowIndex[0]}', this.checked, 'statusOT')">
          <label for="switch-${rowIndex[0]}" class="custom-switch-label"></label>
        </div>
      </td>
      <td class="text-center">
        <div style="display: flex; justify-content: center;">
          <button type='button' class='btn btn-sm me-2 edit-button' onclick='editSetOT("${rowIndex[0]}");'><i class='fa-solid fa-pen-to-square'></i></button>
          <button type='button' class='btn btn-sm me-2 del-button' onclick='delSetOT("${rowIndex[0]}");'><i class='fa-solid fa-trash-can'></i></button>
        </div>
      </td>
    `;
  });
}

const submitFormSetOT = () => {
  event.preventDefault();
  $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });

  const obj = {
    key: document.getElementById('dataSetOTKey').value,
    ot1: document.getElementById('dataSetOT1').value
  }

  if (!obj.ot1) {
    createToast("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô", 3);
    $.LoadingOverlay("hide");
    return;
  }

  if (!obj.key) {
    google.script.run.withSuccessHandler(async (res) => {
      $.LoadingOverlay("hide");
      const newSetOTData = await fetchDataFromAPI(sheetSetting, 'SetOT');
      await checkAndUpdateDataSetOT(newSetOTData);
      clearFormSetOT();
      createToast("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
    }).addDataSetOT(obj);
  } else {
    google.script.run.withSuccessHandler(async (res) => {
      $.LoadingOverlay("hide");
      const newSetOTData = await fetchDataFromAPI(sheetSetting, 'SetOT');
      await checkAndUpdateDataSetOT(newSetOTData);
      clearFormSetOT();
      createToast("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
    }).upDataSetOT(obj);
  }
}

const editSetOT = (codeID) => {
  const row = allSetOT.find(row => row[0] === codeID);
  if (row) {
    $('#setOTModal').modal('show');
    $('#dataSetOTKey').val(row[0]); 
    const percentValue = parseFloat(row[1].replace('%', ''));
    $('#dataSetOT1').val(percentValue);
  }
};

const delSetOT = (codeID) => {
  let rowIndex = allSetOT.find(row => row[0] === codeID);
  if (rowIndex) {
    $('#confirmBtnDel').off('click').on('click', function() {
      $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });
      $('#DelDataModal').modal('hide');
      google.script.run.withSuccessHandler(async (res) => {
        rowIndex = allSetOT.filter(row => row[0] !== codeID);
        $.LoadingOverlay("hide");
        const newSetOTData = await fetchDataFromAPI(sheetSetting, 'SetOT');
        await checkAndUpdateDataSetOT(newSetOTData);
        createToast("‚õî ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 0);
      }).delDataSetOT(codeID);
    });
    $('#xDelconfirmData').off('click').on('click', function() {
      $('#DelDataModal').modal('hide');
    });
    $('#DelDataModal').modal('show');
  }
}

const clearFormSetOT = () => {
  $('#setOTModal').modal('hide');
  document.getElementById('dataSetOTKey').value = "";
  document.getElementById('dataSetOT1').value = "";
  createToast("üîÑ ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", 0);
}

const renderAllDataSetSSO = (res) => {
  const table = document.getElementById('tableSetSSO');
  table.innerHTML = '';

  if (res.length === 0) {
    const row = table.insertRow();
    row.innerHTML = `<td colspan='4' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>`;
    return;
  }

  res.forEach((rowIndex) => {
    let isActive = rowIndex[2] === "TRUE";
    var row = table.insertRow();
    row.innerHTML = `
      <td class="text-center"><span style="font-size: 14px;">${rowIndex[0]}</span></td>
      <td class="text-center"><span style="font-size: 14px;">${rowIndex[1]}</span></td>
      <td class="text-center">
        <div class="custom-switch">
          <input type="checkbox" ${isActive ? 'checked' : ''} id="switch-${rowIndex[0]}" class="custom-switch-input" onchange="toggleSetStatus('${rowIndex[0]}', this.checked, 'statusSSO')">
          <label for="switch-${rowIndex[0]}" class="custom-switch-label"></label>
        </div>
      </td>
      <td class="text-center">
        <div style="display: flex; justify-content: center;">
          <button type='button' class='btn btn-sm me-2 edit-button' onclick='editSetSSO("${rowIndex[0]}");'><i class='fa-solid fa-pen-to-square'></i></button>
          <button type='button' class='btn btn-sm me-2 del-button' onclick='delSetSSO("${rowIndex[0]}");'><i class='fa-solid fa-trash-can'></i></button>
        </div>
      </td>
    `;
  });
}

const submitFormSetSSO = () => {
  event.preventDefault();
  $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });

  const obj = {
    key: document.getElementById('dataSetSSOKey').value,
    sso1: document.getElementById('dataSetSSO1').value
  }

  if (!obj.sso1) {
    createToast("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô", 3);
    $.LoadingOverlay("hide");
    return;
  }

  if (!obj.key) {
    google.script.run.withSuccessHandler(async (res) => {
      $.LoadingOverlay("hide");
      const newSetSSOData = await fetchDataFromAPI(sheetSetting, 'SetSSO');
      await checkAndUpdateDataSetSSO(newSetSSOData);
      clearFormSetSSO();
      createToast("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
    }).addDataSetSSO(obj);
  } else {
    google.script.run.withSuccessHandler(async (res) => {
      $.LoadingOverlay("hide");
      const newSetSSOData = await fetchDataFromAPI(sheetSetting, 'SetSSO');
      await checkAndUpdateDataSetSSO(newSetSSOData);
      clearFormSetSSO();
      createToast("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
    }).upDataSetSSO(obj);
  }
}

const editSetSSO = (codeID) => {
  const row = allSetSSO.find(row => row[0] === codeID);
  if (row) {
    $('#setSSOModal').modal('show');
    $('#dataSetSSOKey').val(row[0]); 
    const percentValue = parseFloat(row[1].replace('%', ''));
    $('#dataSetSSO1').val(percentValue);
  }
};

const delSetSSO = (codeID) => {
  let rowIndex = allSetSSO.find(row => row[0] === codeID);
  if (rowIndex) {
    $('#confirmBtnDel').off('click').on('click', function() {
      $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });
      $('#DelDataModal').modal('hide');
      google.script.run.withSuccessHandler(async (res) => {
        rowIndex = allSetSSO.filter(row => row[0] !== codeID);
        $.LoadingOverlay("hide");
        const newSetSSOData = await fetchDataFromAPI(sheetSetting, 'SetSSO');
        await checkAndUpdateDataSetSSO(newSetSSOData);
        createToast("‚õî ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 0);
      }).delDataSetSSO(codeID);
    });
    $('#xDelconfirmData').off('click').on('click', function() {
      $('#DelDataModal').modal('hide');
    });
    $('#DelDataModal').modal('show');
  }
}

const clearFormSetSSO = () => {
  $('#setSSOModal').modal('hide');
  document.getElementById('dataSetSSOKey').value = "";
  document.getElementById('dataSetSSO1').value = "";
  createToast("üîÑ ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", 0);
}

const renderAllDataSetDayOff = (res) => {
  const table = document.getElementById('tableSetDayOff');
  table.innerHTML = '';

  if (res.length === 0) {
    const row = table.insertRow();
    row.innerHTML = `<td colspan='4' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>`;
    return;
  }

  res.forEach((rowIndex) => {
    var row = table.insertRow();
    row.innerHTML = `
      <td class="text-center"><span style="font-size: 14px;">${rowIndex[0]}</span></td>
      <td class="text-center"><span style="font-size: 14px;">${rowIndex[1]}</span></td>
      <td><span style="font-size: 14px;">${rowIndex[2]}</span></td>
      <td class="text-center">
        <div style="display: flex; justify-content: center;">
          <button type='button' class='btn btn-sm me-2 edit-button' onclick='editSetDayOff("${rowIndex[0]}");'><i class='fa-solid fa-pen-to-square'></i></button>
          <button type='button' class='btn btn-sm me-2 del-button' onclick='delSetDayOff("${rowIndex[0]}");'><i class='fa-solid fa-trash-can'></i></button>
        </div>
      </td>
    `;
  });
}

const submitFormSetDayOff = () => {
  event.preventDefault();
  $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });

  const obj = {
    key: document.getElementById('dataSetDayOffKey').value,
    sdoff1: document.getElementById('dataSetDayOff1').value,
    sdoff2: document.getElementById('dataSetDayOff2').value
  }

  if (!obj.sdoff1 || !obj.sdoff2) {
    createToast("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô", 3);
    $.LoadingOverlay("hide");
    return;
  }

  if (!obj.key) {
    google.script.run.withSuccessHandler(async (res) => {
      $.LoadingOverlay("hide");
      const newSetDayOffData = await fetchDataFromAPI(sheetSetting, 'SetDayOff');
      await checkAndUpdateDataSetDayOff(newSetDayOffData);
      clearFormSetDayOff();
      createToast("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
    }).addDataSetDayOff(obj);
  } else {
    google.script.run.withSuccessHandler(async (res) => {
      $.LoadingOverlay("hide");
      const newSetDayOffData = await fetchDataFromAPI(sheetSetting, 'SetDayOff');
      await checkAndUpdateDataSetDayOff(newSetDayOffData);
      clearFormSetDayOff();
      createToast("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
    }).upDataSetDayOff(obj);
  }
}

const editSetDayOff = (codeID) => {
  const row = allSetDayOff.find(row => row[0] === codeID);
  if (row) {
    const rawDate = row[1];
    const [day, month, year] = rawDate.split('/');
    const formattedDate = `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;
    $('#setDayOffModal').modal('show');
    $('#dataSetDayOffKey').val(row[0]);
    $('#dataSetDayOff1').val(formattedDate); 
    $('#dataSetDayOff2').val(row[2]);
  }
};

const delSetDayOff = (codeID) => {
  let rowIndex = allSetDayOff.find(row => row[0] === codeID);
  if (rowIndex) {
    $('#confirmBtnDel').off('click').on('click', function() {
      $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });
      $('#DelDataModal').modal('hide');
      google.script.run.withSuccessHandler(async (res) => {
        rowIndex = allSetDayOff.filter(row => row[0] !== codeID);
        $.LoadingOverlay("hide");
        const newSetDayOffData = await fetchDataFromAPI(sheetSetting, 'SetDayOff');
        await checkAndUpdateDataSetDayOff(newSetDayOffData);
        createToast("‚õî ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 0);
      }).delDataSetDayOff(codeID);
    });
    $('#xDelconfirmData').off('click').on('click', function() {
      $('#DelDataModal').modal('hide');
    });
    $('#DelDataModal').modal('show');
  }
}

const clearFormSetDayOff = () => {
  $('#setDayOffModal').modal('hide');
  document.getElementById('dataSetDayOffKey').value = "";
  document.getElementById('dataSetDayOff1').value = "";
  document.getElementById('dataSetDayOff2').value = "";
  createToast("üîÑ ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", 0);
}

const renderAllDataSetWeekEnd = (res) => {
  const table = document.getElementById('tableSetWeekEnd');
  table.innerHTML = '';

  if (res.length === 0) {
    const row = table.insertRow();
    row.innerHTML = `<td colspan='4' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>`;
    return;
  }

  res.forEach((rowIndex) => {
    let isActive = rowIndex[2] === "TRUE";
    var row = table.insertRow();
    row.innerHTML = `
      <td class="text-center"><span style="font-size: 14px;">${rowIndex[0]}</span></td>
      <td class="text-center"><span style="font-size: 14px;">${rowIndex[1]}</span></td>
      <td class="text-center">
        <div class="custom-switch">
          <input type="checkbox" ${isActive ? 'checked' : ''} id="switch-${rowIndex[0]}" class="custom-switch-input" onchange="toggleSetStatus('${rowIndex[0]}', this.checked, 'statusWeekEnd')">
          <label for="switch-${rowIndex[0]}" class="custom-switch-label"></label>
        </div>
      </td>
      <td class="text-center">
        <div style="display: flex; justify-content: center;">
          <button type='button' class='btn btn-sm me-2 edit-button' onclick='editSetWeekEnd("${rowIndex[0]}");'><i class='fa-solid fa-pen-to-square'></i></button>
          <button type='button' class='btn btn-sm me-2 del-button' onclick='delSetWeekEnd("${rowIndex[0]}");'><i class='fa-solid fa-trash-can'></i></button>
        </div>
      </td>
    `;
  });
}

const submitFormSetWeekEnd = () => {
  event.preventDefault();
  $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });

  const obj = {
    key: document.getElementById('dataSettWeekEndKey').value,
    weoff1: document.getElementById('dataSettWeekEnd1').value
  }

  if (!obj.weoff1) {
    createToast("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô", 3);
    $.LoadingOverlay("hide");
    return;
  }

  if (!obj.key) {
    google.script.run.withSuccessHandler(async (res) => {
      $.LoadingOverlay("hide");
      const newSetWeekEndData = await fetchDataFromAPI(sheetSetting, 'SetWeekEnd');
      await checkAndUpdateDataSetWeekEnd(newSetWeekEndData);
      clearFormSettWeekEnd();
      createToast("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
    }).addDataSetWeekEnd(obj);
  } else {
    google.script.run.withSuccessHandler(async (res) => {
      $.LoadingOverlay("hide");
      const newSetWeekEndData = await fetchDataFromAPI(sheetSetting, 'SetWeekEnd');
      await checkAndUpdateDataSetWeekEnd(newSetWeekEndData);
      clearFormSettWeekEnd();
      createToast("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
    }).upDataSetWeekEnd(obj);
  }
}

const editSetWeekEnd = (codeID) => {
  const row = allSetWeekEnd.find(row => row[0] === codeID);
  if (row) {
    $('#setWeekEndModal').modal('show');
    $('#dataSettWeekEndKey').val(row[0]);
    $('#dataSettWeekEnd1').val(row[1]);
  }
};

const delSetWeekEnd = (codeID) => {
  let rowIndex = allSetWeekEnd.find(row => row[0] === codeID);
  if (rowIndex) {
    $('#confirmBtnDel').off('click').on('click', function() {
      $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });
      $('#DelDataModal').modal('hide');
      google.script.run.withSuccessHandler(async (res) => {
        rowIndex = allSetWeekEnd.filter(row => row[0] !== codeID);
        $.LoadingOverlay("hide");
        const newSetWeekEndData = await fetchDataFromAPI(sheetSetting, 'SetWeekEnd');
        await checkAndUpdateDataSetWeekEnd(newSetWeekEndData);
        createToast("‚õî ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 0);
      }).delDataSetWeekEnd(codeID);
    });
    $('#xDelconfirmData').off('click').on('click', function() {
      $('#DelDataModal').modal('hide');
    });
    $('#DelDataModal').modal('show');
  }
}

const clearFormSettWeekEnd = () => {
  $('#setWeekEndModal').modal('hide');
  document.getElementById('dataSettWeekEndKey').value = "";
  document.getElementById('dataSettWeekEnd1').value = "";
  createToast("üîÑ ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", 0);
}

const renderAllDataSetSalary = (res) => {
  const table = document.getElementById('tableSetSalary');
  table.innerHTML = '';

  if (res.length === 0) {
    const row = table.insertRow();
    row.innerHTML = `<td colspan='5' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>`;
    return;
  }

  res.forEach((rowIndex) => {

    var row = table.insertRow();
    row.innerHTML = `
      <td class="text-center"><span style="font-size: 14px;">${rowIndex[0]}</span></td>
      <td class="text-center"><span style="font-size: 14px;">${rowIndex[1]}</span></td>
      <td class="text-center"><span style="font-size: 14px;">${rowIndex[2]}</span></td>
      <td class="text-center"><span style="font-size: 14px;">${rowIndex[3]}</span></td>
      <td class="text-center">
        <div style="display: flex; justify-content: center;">
          <button type='button' class='btn btn-sm me-2 edit-button' onclick='editSetSalary("${rowIndex[0]}");'><i class='fa-solid fa-pen-to-square'></i></button>
          <button type='button' class='btn btn-sm me-2 del-button' onclick='delSetSalary("${rowIndex[0]}");'><i class='fa-solid fa-trash-can'></i></button>
        </div>
      </td>
    `;
  });
}

const submitFormSetSalary = () => {
  event.preventDefault();
  $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });

  const obj = {
    key: document.getElementById('dataSetSalaryKey').value,
    salary1: document.getElementById('dataSetSalary1').value,
    salary2: document.getElementById('dataSetSalary2').value,
    salary3: document.getElementById('dataSetSalary3').value
  }

  if (!obj.salary1 || !obj.salary2 || !obj.salary3) {
    createToast("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô", 3);
    $.LoadingOverlay("hide");
    return;
  }

  if (!obj.key) {
    google.script.run.withSuccessHandler(async (res) => {
      $.LoadingOverlay("hide");
      const newSetSalaryData = await fetchDataFromAPI(sheetSetting, 'SetSalary');
      await checkAndUpdateDataSetSalary(newSetSalaryData);
      allDropdown()
      clearFormSetSalary();
      createToast("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
    }).addDataSetSalary(obj);
  } else {
    google.script.run.withSuccessHandler(async (res) => {
      $.LoadingOverlay("hide");
      const newSetSalaryData = await fetchDataFromAPI(sheetSetting, 'SetSalary');
      await checkAndUpdateDataSetSalary(newSetSalaryData);
      allDropdown()
      clearFormSetSalary();
      createToast("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
    }).upDataSetSalary(obj);
  }
}

const editSetSalary = (codeID) => {
  const row = allsetSalary.find(row => row[0] === codeID);
  if (row) {
    const rawDate1 = row[1];
    const rawDate2 = row[2];

    const [day1, month1, year1] = rawDate1.split('/');
    const formattedDate1 = `${year1}-${month1.padStart(2, '0')}-${day1.padStart(2, '0')}`;

    const [day2, month2, year2] = rawDate2.split('/');
    const formattedDate2 = `${year2}-${month2.padStart(2, '0')}-${day2.padStart(2, '0')}`;

    $('#setSalaryModal').modal('show');
    $('#dataSetSalaryKey').val(row[0]);
    $('#dataSetSalary1').val(formattedDate1);
    $('#dataSetSalary2').val(formattedDate2);
    $('#dataSetSalary3').val(row[3]);
  }
};

const delSetSalary = (codeID) => {
  let rowIndex = allsetSalary.find(row => row[0] === codeID);
  if (rowIndex) {
    $('#confirmBtnDel').off('click').on('click', function() {
      $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });
      $('#DelDataModal').modal('hide');
      google.script.run.withSuccessHandler(async (res) => {
        rowIndex = allsetSalary.filter(row => row[0] !== codeID);
        $.LoadingOverlay("hide");
        const newSetSalaryData = await fetchDataFromAPI(sheetSetting, 'SetSalary');
        await checkAndUpdateDataSetSalary(newSetSalaryData);
        allDropdown()
        createToast("‚õî ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 0);
      }).delDataSetSalary(codeID);
    });
    $('#xDelconfirmData').off('click').on('click', function() {
      $('#DelDataModal').modal('hide');
    });
    $('#DelDataModal').modal('show');
  }
}

const clearFormSetSalary = () => {
  $('#setSalaryModal').modal('hide');
  document.getElementById('dataSetSalaryKey').value = "";
  document.getElementById('dataSetSalary1').value = "";
  document.getElementById('dataSetSalary2').value = "";
  document.getElementById('dataSetSalary3').value = "";
  createToast("üîÑ ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", 0);
}

const renderAllDataSetBacnkCode = (res) => {
  const table = document.getElementById('tableSetBacnkCode');
  table.innerHTML = '';

  if (res.length === 0) {
    const row = table.insertRow();
    row.innerHTML = `<td colspan='5' class='fw-bold text-danger text-center p-4'><i class='fa-solid fa-circle-info text-danger'></i> ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•! üòì</td>`;
    return;
  }

  res.forEach((rowIndex) => {
    var row = table.insertRow();
    row.innerHTML = `
      <td class="text-center"><span style="font-size: 14px;">${rowIndex[0]}</span></td>
      <td class="text-center"><span style="font-size: 14px;"><img class="rounded-circle" src="${rowIndex[3]}" alt="ImageUsers" width="30" style="margin-right: 10px;"></span></td>
      <td><span style="font-size: 14px;">${rowIndex[1]}</span></td>
      <td><span style="font-size: 14px;">${rowIndex[2]}</span></td>
      <td class="text-center">
        <div style="display: flex; justify-content: center;">
          <button type='button' class='btn btn-sm me-2 del-button' onclick='delSetBacnkCode("${rowIndex[0]}");'><i class='fa-solid fa-trash-can'></i></button>
        </div>
      </td>
    `;
  });
}

document.addEventListener('DOMContentLoaded', (ev) => {
  let input = document.querySelector('input[id="regictorBankImg"]');
  input.addEventListener('change', (ev) => {
      if (input.files[0].type.indexOf("image/") > -1) {
        let img = document.getElementById('regictorBankPreview');
        img.src = window.URL.createObjectURL(input.files[0]);
      }
  });
});

const submitFormSetBank = () => {
  event.preventDefault();
  $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });

  const obj = {
    bankkey: document.getElementById('dataSetBankKey').value,
    bank1: document.getElementById('dataSetBank1').value,
    bank2: document.getElementById('dataSetBank2').value,
    check: document.getElementById('regictorBankImg').value
  }

  if (!obj.bankkey || !obj.bank1 || !obj.bank2) {
    createToast("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô", 3);
    $.LoadingOverlay("hide");
    return;
  }

  if (obj.check === "") {
    obj.bankfile = $("#regictorBankPreview").attr("src");
  } else {
    const imgElement = document.getElementById("regictorBankPreview");
    const canvas = document.createElement("canvas");
    const context = canvas.getContext("2d");
    canvas.width = imgElement.naturalWidth;
    canvas.height = imgElement.naturalHeight;
    context.drawImage(imgElement, 0, 0, imgElement.naturalWidth, imgElement.naturalHeight);
    obj.imageDataUrl = canvas.toDataURL("image/png");
    obj.filetype = "image/png";
    obj.filename = obj.bankkey;
  }
  google.script.run.withSuccessHandler(async (res) => {
    $.LoadingOverlay("hide");
    const newSetBacnkCodeData = await fetchDataFromAPI(sheetSetting, 'BacnkCode');
    await checkAndUpdateDataSetBacnkCode(newSetBacnkCodeData);
    clearFormSetBank();
    createToast("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
  }).addDataSetBank(obj);
}

const editSetBacnkCode = (codeID) => {
  const row = allBacnkCode.find(row => row[0] === codeID);
  if (row) {
    $('#setBankModal').modal('show');
    $('#dataSetBankKey').val(row[0]).prop('disabled', true);
    $('#dataSetBank1').val(row[1]);
    $('#dataSetBank2').val(row[2]);
    $('#regictorBankPreview').attr('src', row[3]);
  }
};

const delSetBacnkCode = (codeID) => {
  let rowIndex = allBacnkCode.find(row => row[0] === codeID);
  if (rowIndex) {
    $('#confirmBtnDel').off('click').on('click', function() {
      $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });
      $('#DelDataModal').modal('hide');
      google.script.run.withSuccessHandler(async (res) => {
        rowIndex = allBacnkCode.filter(row => row[0] !== codeID);
        $.LoadingOverlay("hide");
        const newSetBacnkCodeData = await fetchDataFromAPI(sheetSetting, 'BacnkCode');
        await checkAndUpdateDataSetBacnkCode(newSetBacnkCodeData);
        createToast("‚õî ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 0);
      }).delDataSetBankCode(codeID);
    });
    $('#xDelconfirmData').off('click').on('click', function() {
      $('#DelDataModal').modal('hide');
    });
    $('#DelDataModal').modal('show');
  }
}

const clearFormSetBank = () => {
  $('#setBankModal').modal('hide');
  $('#dataSetBankKey').prop('disabled', false);
  document.getElementById('dataSetBankKey').value = "";
  document.getElementById('dataSetBank1').value = "";
  document.getElementById('dataSetBank2').value = "";
  createToast("üîÑ ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", 0);
}

const reviewdivBankCode = () => {
  let divcontainer = document.getElementById('reviewdivBankCode');
  divcontainer.innerHTML = "";
  let row = document.createElement('div');
  row.className = "row row-cols-6";
  for (let i = 1; i <= 17; i++) {
    let image = "https://raw.githubusercontent.com/EPICCODING17/bankThai/main/bank-" + i + ".png";
    let col = document.createElement('div');
    col.className = "col p-2";
    let img = document.createElement('img');
    img.className = "rounded-circle w-100 imageuser"; 
    img.src = image;
    img.style.cursor = "pointer";
    img.addEventListener('click', () => {
      let imgPreview = document.getElementById('regictorBankPreview');
      imgPreview.src = "https://raw.githubusercontent.com/EPICCODING17/bankThai/main/bank-" + i + ".png";
    });
    col.appendChild(img);
    row.appendChild(col);
  }
  divcontainer.appendChild(row); 
}

const toggleSetStatus = (codeId, isActive, status) => {
  $.LoadingOverlay("show", { image: "", fontawesome: "fa fa-spinner fa-spin" });
  google.script.run.withSuccessHandler(async (res) => {
    $.LoadingOverlay("hide");
    if (status === 'statusTime') {
      const newSetTimeData = await fetchDataFromAPI(sheetSetting, 'SetTime');
      await checkAndUpdateDataSetTime(newSetTimeData);
      loadShiftTimes();
    } else if (status === 'statusLeave') {
      const newSetLeaveData = await fetchDataFromAPI(sheetSetting, 'SetLeave');
      await checkAndUpdateDataSetLeave(newSetLeaveData);
    } else if (status === 'statusOT') {
      const newSetOTData = await fetchDataFromAPI(sheetSetting, 'SetOT');
      await checkAndUpdateDataSetOT(newSetOTData);
    } else if (status === 'statusSSO') {
      const newSetSSOData = await fetchDataFromAPI(sheetSetting, 'SetSSO');
      await checkAndUpdateDataSetSSO(newSetSSOData);
    } else if (status === 'statusWeekEnd') {
      const newSetWeekEndData = await fetchDataFromAPI(sheetSetting, 'SetWeekEnd');
      await checkAndUpdateDataSetWeekEnd(newSetWeekEndData);
    }
    createToast("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 1);
  }).saveSetStatus(codeId, isActive, status);
}
</script>
